name=Area Chart
description=The area chart functions the same way as a line chart only it fills the area between the line and the threshold, which is 0 by default.
parameter.categories.name=categories
parameter.categories.description=Text to display on the x-axis next to each bar.
parameter.series.name=series
parameter.series.description=Array of data series, each created as a dictionary matching the format of { x: (decimal), y: (decimal) }
parameter.xAxisTitle.name=xAxisTitle
parameter.xAxisTitle.description=Title for the independent (horizontal) axis.
parameter.yAxisTitle.name=yAxisTitle
parameter.yAxisTitle.description=Title for the dependent (vertical) axis.
parameter.yAxisMin.name=yAxisMin
parameter.yAxisMin.description=Determines the minimum displayed point on the horizontal axis.
parameter.yAxisMax.name=yAxisMax
parameter.yAxisMax.description=Determines the maximum displayed point on the horizontal axis.
parameter.xAxisType.name=xAxisType
parameter.xAxisType.description=The type of axis. Can be one of linear, logarithmic, datetime or category. In a datetime axis, the numbers are given in milliseconds, and tick marks are placed on appropriate values like full hours or days. In a category axis, the point names of the chart's series are used for categories, if not a categories array is defined.
parameter.xAxisFormat.name=xAxisFormat
parameter.xAxisFormat.description=A format string for the axis label. The context is available as format string variables. For example, you can use {text} to insert the default formatted text. The recommended way of adding units for the label is using text, for example {text} km.\
\
To add custom numeric or datetime formatting, use {value} with formatting, for example {value:.1f} or {value:%Y-%m-%d}.\
\
See format string for more examples of formatting.\
\
The default value is not specified due to the dynamic nature of the default implementation.\
\
Defaults to undefined.
parameter.threshold.name=threshold
parameter.threshold.description=The Y axis value to serve as the base for the area, for distinguishing between values above and below a threshold. The area between the graph and the threshold is filled.
parameter.showLegend.name=showLegend
parameter.showLegend.description=Determines if a color legend displays below the chart. Default: true.
parameter.showTooltips.name=showTooltips
parameter.showTooltips.description=Determines if a tooltip displays the data value for a word. Default: true.
parameter.showDataLabels.name=showDataLabels
parameter.showDataLabels.description=Determines if data values are displayed next to each bar. Default: false.
parameter.allowDecimalAxisLabels.name=allowDecimalAxisLabels
parameter.allowDecimalAxisLabels.description=Allows dependent (horizontal) values to display as decimal numbers instead of integers. Default: false.
parameter.colorScheme.name=colorScheme
parameter.colorScheme.description=Determines which color scheme to use in the chart. Use one of the following valid values: "CLASSIC" (default), "MIDNIGHT", "OCEAN", "MOSS", "BERRY", "PARACHUTE", "RAINFOREST", "SUNSET" or a custom list of hex values. See the documentation for guidance on how to use color schemes.
parameter.xAxisStyle.name=xAxisStyle
parameter.xAxisStyle.description=Determines how to display the labels and axis separators for the X-Axis. Valid values: "STANDARD" (default), "NONE".
parameter.yAxisStyle.name=yAxisStyle
parameter.yAxisStyle.description=Determines how to display the labels, axis separators, and grid lines for the Y-Axis. Valid values: "STANDARD" (default), "MINIMAL", "NONE".
parameter.showLinks.name=showLinks
parameter.showLinks.description=Determines if links are placed on words. Default: false.
parameter.link.name=link
parameter.link.description=SaveInto to execute when a user selects a data point on the chart. Use save!value to pass context from the selection made on the chart to the link. Create a saveInto using a!save().
